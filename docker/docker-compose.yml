services:
  facerec:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: facerec-app
    ports:
      - "${UI_PORT:-8501}:8501"  # Map Streamlit UI port
    volumes:
      # Mount code directories for development
      - ../src:/app/src
      - ../config:/app/config
      - ../docs:/app/docs
      # Mount data directory for persistence
      - ../data:/app/data:rw
      # Mount logs for debugging
      - ../logs:/app/logs:rw
      # Mount .streamlit directory
      - ../src/ui/streamlit/.streamlit:/app/src/ui/streamlit/.streamlit:rw
      # Mount main demo script
      - ../run_demo.py:/app/run_demo.py
      # Device access for webcam (macOS and some Linux systems)
      - /dev:/dev:rw
    environment:
      # Application configuration
      - DEMO_MODE=true  # Initialize demo data on startup
      - WEBCAM_ENABLED=true  # Enable webcam in container
      - LOG_LEVEL=INFO  # Set logging verbosity
      - UI_PORT=8501  # Streamlit UI port
      - FORCE_HEADLESS=true  # Run in headless mode (no GUI windows)
      # OpenCV webcam settings
      - OPENCV_VIDEOIO_DEBUG=1  # Enable detailed webcam debug output
      - OPENCV_VIDEOIO_PRIORITY_V4L2=1000  # Prioritize Video4Linux
      - OPENCV_VIDEOIO_PRIORITY_MSMF=0  # Lower Microsoft Media Foundation priority
      - OPENCV_VIDEOIO_PRIORITY_AVFOUNDATION=1000  # Prioritize AVFoundation on macOS
      - OPENCV_FFMPEG_CAPTURE_OPTIONS=video_device_index=0  # Suggest device 0
      - STREAMLIT_HOME_DIR=/app/src/ui/streamlit/.streamlit
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_SERVER_RUN_ON_SAVE=true
      - STREAMLIT_RUNTIME_METRICS_ENABLED=false
      # Optional: Add your custom environment variables here
      # - CUSTOM_VAR=value
    user: "root"  # Run as root temporarily to fix permission issues
    # Choose the right device mapping based on OS:
    # Uncomment the appropriate section for your OS
    
    # For Linux:
    # devices:
    #   - /dev/video0:/dev/video0  # Map primary webcam device
    #   - /dev/video1:/dev/video1  # Map secondary webcam device (if available)
    
    # For macOS & Windows, device mapping doesn't work directly, use privileged mode:
    privileged: true  # Give extended privileges to the container for hardware access
    
    # Additional device mapping will be merged with volumes below
    healthcheck:
      # Check if Streamlit UI is responding
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    # Restart policy - always restart unless explicitly stopped
    restart: unless-stopped

# Configuration notes:
# - The restart policy ensures the container automatically recovers from crashes
# - Volume mounts enable real-time code changes without rebuilding the container
# - Environment variables can be overridden at runtime using .env file or command line
#
# Development tips:
# - For live code changes: Keep the container running and edit code in ./src
# - To override environment variables: UI_PORT=8502 docker-compose up
# - To rebuild the container after Dockerfile changes: docker-compose build --no-cache
